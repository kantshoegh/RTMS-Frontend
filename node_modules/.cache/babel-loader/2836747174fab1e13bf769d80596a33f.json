{"ast":null,"code":"var _jsxFileName = \"/Users/josephc/Documents/Hackathon/rtms/src/pages/RollTrailerManagementSystemSearch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RollTrailerManagementSystemSearch = () => {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]); //     set search query to empty string\n\n  const [q, setQ] = useState(\"\"); //     set search parameters\n  //     we only what to search countries by capital and name\n  //     this list can be longer if you want\n  //     you can search countries even by their population\n  // just add it to this array\n\n  const [searchParam] = useState([\"capital\", \"name\"]); // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n\n  useEffect(() => {\n    fetch(\"https://restcountries.com/v2/all\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setItems(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this);\n  } else {\n    return (\n      /*#__PURE__*/\n\n      /* here we map over the element and display each item as a card  */\n      _jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"search-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"search\",\n              name: \"search-form\",\n              id: \"search-form\",\n              className: \"search-input\",\n              placeholder: \"Search for...\",\n              value: q\n              /*\n              // set the value of our useState q\n              //  anytime the user types in the search box\n              */\n              ,\n              onChange: e => setQ(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sr-only\",\n              children: \"Search countries here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"card-grid\",\n          children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"article\", {\n              className: \"card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-image\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: item.flag,\n                  alt: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"card-name\",\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n                  className: \"card-list\",\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [\"population:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: item.population\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 79,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [\"Region: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: item.region\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 82,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [\"Capital: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: item.capital\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 54\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this)]\n            }, item.ccn3, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)\n    );\n  }\n};\n\n_s(RollTrailerManagementSystemSearch, \"rN+ZPz8iPJ0xy5YfnUcAPogF0CU=\");\n\n_c = RollTrailerManagementSystemSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"RollTrailerManagementSystemSearch\");","map":{"version":3,"names":["React","useState","useEffect","RollTrailerManagementSystemSearch","error","setError","isLoaded","setIsLoaded","items","setItems","q","setQ","searchParam","fetch","then","res","json","result","message","e","target","value","map","item","flag","name","population","region","capital","ccn3"],"sources":["/Users/josephc/Documents/Hackathon/rtms/src/pages/RollTrailerManagementSystemSearch.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport const RollTrailerManagementSystemSearch = () => {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n\n\n    //     set search query to empty string\n    const [q, setQ] = useState(\"\");\n    //     set search parameters\n    //     we only what to search countries by capital and name\n    //     this list can be longer if you want\n    //     you can search countries even by their population\n    // just add it to this array\n    const [searchParam] = useState([\"capital\", \"name\"]);\n\n    // Note: the empty deps array [] means\n    // this useEffect will run once\n    // similar to componentDidMount()\n    useEffect(() => {\n        fetch(\"https://restcountries.com/v2/all\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    setIsLoaded(true);\n                    setItems(result);\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                    setIsLoaded(true);\n                    setError(error);\n                }\n            )\n    }, [])\n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n        return <div>Loading...</div>;\n    } else {\n        return (\n            /* here we map over the element and display each item as a card  */\n            <div className=\"wrapper\">\n\n                <div className=\"search-wrapper\">\n                    <label htmlFor=\"search-form\">\n                        <input\n                            type=\"search\"\n                            name=\"search-form\"\n                            id=\"search-form\"\n                            className=\"search-input\"\n                            placeholder=\"Search for...\"\n                            value={q}\n                            /*\n                            // set the value of our useState q\n                            //  anytime the user types in the search box\n                            */\n                            onChange={(e) => setQ(e.target.value)}\n                        />\n                        <span className=\"sr-only\">Search countries here</span>\n                    </label>\n                </div>\n\n                <ul className=\"card-grid\">\n                    {items.map((item) => (\n                        <li>\n                            <article className=\"card\" key={item.ccn3}>\n                                <div className=\"card-image\">\n                                    <img src={item.flag} alt={item.name} />\n                                </div>\n                                <div className=\"card-content\">\n                                    <h2 className=\"card-name\">{item.name}</h2>\n                                    <ol className=\"card-list\">\n                                        <li>\n                                            population:{\" \"}\n                                            <span>{item.population}</span>\n                                        </li>\n                                        <li>\n                                            Region: <span>{item.region}</span>\n                                        </li>\n                                        <li>\n                                            Capital: <span>{item.capital}</span>\n                                        </li>\n                                    </ol>\n                                </div>\n                            </article>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        );\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}