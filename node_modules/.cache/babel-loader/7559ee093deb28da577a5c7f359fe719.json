{"ast":null,"code":"var _jsxFileName = \"/Users/josephc/Documents/Hackathon/rtms/src/pages/RollTrailerManagementSystemSearch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RollTrailerManagementSystemSearch = () => {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]); //     set search query to empty string\n\n  const [q, setQ] = useState(\"\"); //     set search parameters\n  //     we only what to search countries by capital and name\n  //     this list can be longer if you want\n  //     you can search countries even by their population\n  // just add it to this array\n\n  const [searchParam] = useState([\"capital\", \"name\"]); // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n\n  useEffect(() => {\n    fetch(\"https://restcountries.com/v2/all\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setItems(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  function search(items) {\n    return items.filter(item => {\n      /*\n      // in here we check if our region is equal to our c state\n      // if it's equal to then only return the items that match\n      // if not return All the countries\n      */\n      if (item.region == filterParam) {\n        return searchParam.some(newItem => {\n          return item[newItem].toString().toLowerCase().indexOf(q.toLowerCase()) > -1;\n        });\n      } else if (filterParam == \"All\") {\n        return searchParam.some(newItem => {\n          return item[newItem].toString().toLowerCase().indexOf(q.toLowerCase()) > -1;\n        });\n      }\n    });\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 16\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 16\n    }, this);\n  } else {\n    return (\n      /*#__PURE__*/\n\n      /* here we map over the element and display each item as a card  */\n      _jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"search-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"search\",\n              name: \"search-form\",\n              id: \"search-form\",\n              className: \"search-input\",\n              placeholder: \"Search for...\",\n              value: q\n              /*\n              // set the value of our useState q\n              //  anytime the user types in the search box\n              */\n              ,\n              onChange: e => setQ(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sr-only\",\n              children: \"Search countries here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          /*\n          // here we create a basic select input\n          // we set the value to the selected value\n          // and update the setFilterParam() state every time onChange is called\n          */\n          onChange: e => {//   setFilterParam(e.target.value);\n          },\n          className: \"custom-select\",\n          \"aria-label\": \"Filter Countries By Region\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"All\",\n            children: \"Filter By Region\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Africa\",\n            children: \"Africa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Americas\",\n            children: \"America\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Asia\",\n            children: \"Asia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Europe\",\n            children: \"Europe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Oceania\",\n            children: \"Oceania\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"card-grid\",\n          children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"article\", {\n              className: \"card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-image\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: item.flag,\n                  alt: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 31\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"card-name\",\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n                  className: \"card-list\",\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [\"population:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: item.population\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 39\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 35\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [\"Region: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: item.region\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 130,\n                      columnNumber: 47\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 35\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [\"Capital: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: item.capital\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 48\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 35\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 31\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 27\n              }, this)]\n            }, item.callingCodes, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    );\n  }\n};\n\n_s(RollTrailerManagementSystemSearch, \"rN+ZPz8iPJ0xy5YfnUcAPogF0CU=\");\n\n_c = RollTrailerManagementSystemSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"RollTrailerManagementSystemSearch\");","map":{"version":3,"names":["React","useState","useEffect","RollTrailerManagementSystemSearch","error","setError","isLoaded","setIsLoaded","items","setItems","q","setQ","searchParam","fetch","then","res","json","result","search","filter","item","region","filterParam","some","newItem","toString","toLowerCase","indexOf","message","e","target","value","map","flag","name","population","capital","callingCodes"],"sources":["/Users/josephc/Documents/Hackathon/rtms/src/pages/RollTrailerManagementSystemSearch.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\n\nexport const RollTrailerManagementSystemSearch = () => {\n    const [error, setError] = useState(null);\n      const [isLoaded, setIsLoaded] = useState(false);\n      const [items, setItems] = useState([]);\n\n\n         //     set search query to empty string\n         const [q, setQ] = useState(\"\");\n         //     set search parameters\n         //     we only what to search countries by capital and name\n         //     this list can be longer if you want\n         //     you can search countries even by their population\n         // just add it to this array\n         const [searchParam] = useState([\"capital\", \"name\"]);\n\n      // Note: the empty deps array [] means\n      // this useEffect will run once\n      // similar to componentDidMount()\n      useEffect(() => {\n        fetch(\"https://restcountries.com/v2/all\")\n          .then(res => res.json())\n          .then(\n            (result) => {\n              setIsLoaded(true);\n              setItems(result);\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n              setIsLoaded(true);\n              setError(error);\n            }\n          )\n      }, [])\n\n      function search(items) {\n        return items.filter((item) => {\n     /*\n     // in here we check if our region is equal to our c state\n     // if it's equal to then only return the items that match\n     // if not return All the countries\n     */\n        if (item.region == filterParam) {\n            return searchParam.some((newItem) => {\n              return (\n                item[newItem]\n                    .toString()\n                    .toLowerCase()\n                    .indexOf(q.toLowerCase()) > -1\n                         );\n                     });\n                 } else if (filterParam == \"All\") {\n                     return searchParam.some((newItem) => {\n                         return (\n                             item[newItem]\n                                 .toString()\n                                 .toLowerCase()\n                                 .indexOf(q.toLowerCase()) > -1\n                         );\n                     });\n                 }\n             });\n         }\n\n      if (error) {\n        return <div>Error: {error.message}</div>;\n      } else if (!isLoaded) {\n        return <div>Loading...</div>;\n      } else {\n        return (\n          /* here we map over the element and display each item as a card  */\n          <div className=\"wrapper\">\n\n            <div className=\"search-wrapper\">\n                        <label htmlFor=\"search-form\">\n                            <input\n                                type=\"search\"\n                                name=\"search-form\"\n                                id=\"search-form\"\n                                className=\"search-input\"\n                                placeholder=\"Search for...\"\n                                value={q}\n                                /*\n                                // set the value of our useState q\n                                //  anytime the user types in the search box\n                                */\n                                onChange={(e) => setQ(e.target.value)}\n                            />\n                            <span className=\"sr-only\">Search countries here</span>\n                        </label>\n                    </div>\n\n                    <select\n    /*\n    // here we create a basic select input\n    // we set the value to the selected value\n    // and update the setFilterParam() state every time onChange is called\n    */\n      onChange={(e) => {\n    //   setFilterParam(e.target.value);\n       }}\n       className=\"custom-select\"\n       aria-label=\"Filter Countries By Region\">\n        <option value=\"All\">Filter By Region</option>\n        <option value=\"Africa\">Africa</option>\n        <option value=\"Americas\">America</option>\n        <option value=\"Asia\">Asia</option>\n        <option value=\"Europe\">Europe</option>\n        <option value=\"Oceania\">Oceania</option>\n        </select>\n\n          <ul className=\"card-grid\">\n              {items.map((item) => (\n                  <li>\n                      <article className=\"card\" key={item.callingCodes}>\n                          <div className=\"card-image\">\n                              <img src={item.flag} alt={item.name} />\n                          </div>\n                          <div className=\"card-content\">\n                              <h2 className=\"card-name\">{item.name}</h2>\n                              <ol className=\"card-list\">\n                                  <li>\n                                      population:{\" \"}\n                                      <span>{item.population}</span>\n                                  </li>\n                                  <li>\n                                      Region: <span>{item.region}</span>\n                                  </li>\n                                  <li>\n                                      Capital: <span>{item.capital}</span>\n                                  </li>\n                              </ol>\n                          </div>\n                      </article>\n                  </li>\n              ))}\n          </ul>\n      </div>\n        );\n      }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}